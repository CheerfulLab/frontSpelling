<script type="text/template" id="tes-modal-template">
    <div class="tes__container tes__container_hidden" id="tes-container">
        <form class="tes__form" action="#" method="POST">
            <p class="tes__title">
                {{ popupTitle }}
            </p>
            <p class="tes__selected-text tes__remove-after-success-submit">
                {text}
            </p>
            <p class="tes__success-message tes__success-message_empty"></p>
            <label for="tes__comment" class="tes__comment-container tes__remove-after-success-submit">
                {{ leaveComment }}
            </label>
            <input id="tes__comment" class="tes__comment tes__remove-after-success-submit" type="text" placeholder="{{ leaveComment }}"/>
            <input type="submit" value="{{ buttonTitle }}" class="tes__submit tes__remove-after-success-submit"/>
            <span class="tes__close">+</span>
        </form>
    </div>
</script>

<script>
;(function()
{
    var comment = '',
        isForm = false,
        template = document.getElementById('tes-modal-template').innerHTML;

    function getSelection()
    {
        var selection = '';
        /**
         * For Modern browsers
         */
        if (window.getSelection)
            selection = window.getSelection().toString();
        /**
         * For IE 8 and less
         */
        else if (document.selection && document.selection.type != 'Control')
            selection = document.selection.createRange().text;

        if( !selection )
            throw new Error('no_selection');

        return selection;
    }

    function createForm()
    {
        if( isForm ) return false;

        var text = getSelection(),
            modal = template.replace('{text}', text),
            container,
            form,
            close,
            comment,
            successMessage;

        document.body.insertAdjacentHTML('beforeEnd', modal);

        container = document.getElementById('tes-container');
        form = container.querySelector('.tes__form');
        close = container.querySelector('.tes__close');
        comment = container.querySelector('.tes__comment');
        successMessage = container.querySelector('.tes__success-message_empty');


        container.addEventListener('click', function (e)
            {
                e.stopPropagation();
                if (e.target === container) {
                    container.parentNode.removeChild(container);
                    isForm = false;
                }
            }
        );

        form.addEventListener('submit', function (e)
            {
                e.preventDefault();
                var json = {
                        url: encodeURIComponent(window.location.href),
                        text: encodeURIComponent(text)
                    },
                    xhr = new XMLHttpRequest();

                if (comment.value.length)
                    json['comment'] = encodeURIComponent(comment.value.trim());

                xhr.open('POST', '/backend/cheerfullab/frontendspelling/spellingrequests/create_ajax', true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(JSON.stringify({textError: json}));

                xhr.onreadystatechange = function ()
                {
                    if (xhr.readyState != 4) return;

                    if (xhr.status != 200)
                    {
                        console.log(xhr.status + ': ' + xhr.statusText);
                    } else
                    {
                        var data = JSON.parse(xhr.responseText);

                        if (data.status)
                        {
                            successMessage.classList.remove('tes__success-message_empty');
                            successMessage.innerText = data.message || 'Success';
                            [].slice.call(form.querySelectorAll('.tes__remove-after-success-submit')).forEach(function(item){ form.removeChild(item) });
                            form.appendChild(successMessage);
                        } else
                        {
                            throw new Error(data.message);
                        }
                    }
                }
            }
        );

        close.addEventListener('click', function ()
            {
                container.parentNode.removeChild(container);
                isForm = false;
            }
        );

        container.classList.remove('tes__container_hidden');
        isForm = true;
    }

    document.addEventListener('keypress', function()
        {
            if ((event.ctrlKey) && ((event.keyCode == 0xA) || (event.keyCode == 0xD)))
            {
                try {
                    createForm();
                } catch (e) {}
            }
        }
    );
}
)();
</script>